[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Glittr stats",
    "section": "",
    "text": "Code\nlibrary(httr2)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(ggbreak)\nlibrary(cowplot)\nCreate a file named .env.sh and add your GitHub PAT (variable named PAT ) and google api key (named GOOGLE_API_KEY) in there, e.g.:\nCode\n# this is an example, store it as .env.R:\nexport AT=\"ghp_aRSRESCTZII20Lklser3H\"\nexport GOOGLE_API_KEY=\"AjKSLE5SklxuRsxwPP8s0\"\nNow source this file to get the keys as objects:\nCode\nsource .env\nGet environment variables as R objects:\nCode\npat &lt;- Sys.getenv(\"PAT\")\ngoogle_api_key &lt;- Sys.getenv(\"GOOGLE_API_KEY\")"
  },
  {
    "objectID": "index.html#set-colors",
    "href": "index.html#set-colors",
    "title": "Glittr stats",
    "section": "Set colors",
    "text": "Set colors\nThese are the same colors as on glittr.org\n\n\nCode\nglittr_cols &lt;- c(\n  \"Scripting and languages\" = \"#3a86ff\",\n  \"Computational methods and pipelines\" = \"#fb5607\",\n  \"Omics analysis\" = \"#ff006e\",\n  \"Reproducibility and data management\" = \"#ffbe0b\",\n  \"Statistics and machine learning\" = \"#8338ec\",\n  \"Others\" = \"#000000\")"
  },
  {
    "objectID": "index.html#parse-repository-data",
    "href": "index.html#parse-repository-data",
    "title": "Glittr stats",
    "section": "Parse repository data",
    "text": "Parse repository data\n\n\nCode\n# get all repositories content as nested list\nparsed &lt;- request(\"https://glittr.org/api/repositories\") |&gt;\n  req_perform() |&gt; resp_body_json()\n\n# extract relevant items as dataframe\nrepo_info_list &lt;- lapply(parsed$data, function(x) data.frame(\n  repo = x$name,\n  author_name = x$author$name,\n  stargazers = x$stargazers,\n  recency = x$days_since_last_push,\n  url = x$url,\n  license = ifelse(is.null(x$license), \"none\", x$license),\n  main_tag = x$tags[[1]]$name,\n  main_category = x$tags[[1]]$category\n))\n\nrepo_info &lt;- do.call(rbind, repo_info_list)\n\n# create a column with provider (either github or gitlab)\nrepo_info$provider &lt;- ifelse(grepl(\"github\", repo_info$url), \"github\", \"gitlab\")\n\n# create a factor for categories for sorting\nrepo_info$main_category &lt;- factor(repo_info$main_category,\n                                  levels = names(glittr_cols))\n\n# category table to keep order the same in the plots\ncat_table &lt;- table(category = repo_info$main_category)\ncat_table &lt;- sort(cat_table)\n\n\nNumber of repositories: 568"
  },
  {
    "objectID": "index.html#get-contributors-info",
    "href": "index.html#get-contributors-info",
    "title": "Glittr stats",
    "section": "Get contributors info",
    "text": "Get contributors info\n\n\nCode\n# take long time to run, so try to use cache results if no repos have been \n# added in the meantime\n\n# check if data/n_contributors.rds exists\nif(file.exists(\"data/n_contributors.rds\")) {\n  n_contributors &lt;- readRDS(\"data/n_contributors.rds\")\n} else {\n  n_contributors &lt;- NULL\n}\n\n# get contributors info only from github repos\nrepo_info_gh &lt;- repo_info[repo_info$provider == \"github\", ]\n\n# get contributor info from github api if update is needed\nif(!identical(sort(repo_info_gh$repo), sort(names(n_contributors)))) {\n  dir.create(\"data\", showWarnings = FALSE)\n  n_contributors &lt;- sapply(repo_info_gh$repo, function(x) {\n    \n    # get repo contributors\n    resp &lt;- request(\"https://api.github.com/repos/\") |&gt;\n      req_url_path_append(x) |&gt;\n      req_url_path_append(\"contributors\") |&gt;\n      req_url_query(per_page = 1) |&gt;\n      req_headers(\n        Accept = \"application/vnd.github+json\",\n        Authorization = paste(\"Bearer\", pat),\n        `X-GitHub-Api-Version` = \"2022-11-28\",\n      ) |&gt;\n      req_perform() \n    \n    link_url &lt;- resp_link_url(resp, \"last\")\n    if(is.null(link_url)) {\n      return(1)\n    } else {\n      npages &lt;- strsplit(link_url, \"&page=\")[[1]][2] |&gt; as.numeric()\n      return(npages)\n    }\n  })\n  \n  # overwrite rds file\n  saveRDS(n_contributors, \"data/n_contributors.rds\")\n}\n\nrepo_info_gh$contributors &lt;- n_contributors[repo_info_gh$repo]"
  },
  {
    "objectID": "index.html#get-country-information",
    "href": "index.html#get-country-information",
    "title": "Glittr stats",
    "section": "Get country information",
    "text": "Get country information\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Boston&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Needham,+MA,+USA&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Brisbane,+Australia&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Australia&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=United+States+of+America&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Ann+Arbor,+MI&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Mountain+View,+CA&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Luxembourg-City,+Luxembourg&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Brussels&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Toronto,+Ontario,+Canada&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Maastricht,+The+Netherlands&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Carrer+Dr.+Aiguader+88,+Barcelona,+Spain&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Portugal&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Chapel+Hill,+NC&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Dublin,+Ireland&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Toronto,+ON&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Canada&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Sofia,+Bulgaria&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Ohio&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Cambridge,+MA&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=United+Kingdom&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Richmond,+VA&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Munich&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=JFK+-%3E+DCA+-%3E+ROA+-%3E+JFK+-%3E+YVR&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=New+York,+NY&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Kingston,+ON&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Waltham,+MA&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Ann+Arbor,+MI+USA&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Newcastle,+UK&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=World+wide&key=xxx&gt;\n\n\nWarning: Geocoding \"World wide\" failed with error:\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Chambana,+IL&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Australia&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=New+York&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Sydney,+Australia&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=13288+Marseille,+France&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Napoli,+Italy&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Saint+Paul,+MN&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=United+States+of+America&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Chicago,+IL,+USA&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Leiden-The+Hague+area,+the+Netherlands&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Finland&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=California&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Rotterdam,+The+Netherlands&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Santa+Cruz,+CA&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Australia&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Richardson,+Tx&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Warsaw,+Poland&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Spain&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Youngstown,+Ohio,+USA&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Columbus+OH&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=United+States+of+America&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Oeiras,+PT&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Lille,+France&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Salt+Lake+City,+UT&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Toronto,+Ontario&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Ann+Arbor,+MI&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Zurich,+Switzerland&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Houston,+TX&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Portland,+OR&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Cambridge+MA&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Boston,+MA&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Denmark&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Edinburgh,+UK&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=France&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Blacksburg,+Virginia&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Seattle,+WA&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Cambridge,+UK&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Oakland+CA&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Vancouver,+BC,+Canada&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Rotterdam,+the+Netherlands&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=New+Mexico,+USA&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=San+Antonio,+TX&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Marseille,+France&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Greifswald,+Germany&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Bergen&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Kyiv&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Los+Angeles,+CA&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Stockholm&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Portland,+OR&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Leiden,+The+Netherlands&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Cambridge,+MA&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Buffalo&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Boston,+MA&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Minnesota&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Amsterdam&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Freiburg,+Germany&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Eindhoven,+the+Netherlands&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Verona&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Melbourne,+Australia&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Bielefeld,+Germany&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Arizona,+USA&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Buffalo,+NY&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Milan&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Sweden&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=United+Kingdom&key=xxx&gt;\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=United+Kingdom&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Berlin+and+all+over+the+planet&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Planet+Earth&key=xxx&gt;\n\n\nWarning: Geocoding \"Planet Earth\" failed with error:\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Melbourne,+Australia&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Indianapolis,+IN&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Amsterdam&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Boston,+MA&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Cupertino,+California,+US&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Madison,+WI&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Gainesville,+FL&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Leipzig,+Germany&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Ireland&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=New+York,+New+York&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Lausanne,+Switzerland&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Melbourne,+Australia&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Boston,+MA&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=United+States+of+America&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Roswell+Park+Comprehensive+Cancer+Center&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Germany&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Dijon&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Earth&key=xxx&gt;\n\n\nWarning: Geocoding \"Earth\" failed with error:\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Ellicott+City,+MD,+USA&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Cambridge,+UK&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Spain&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Switzerland&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Hendersonville,+NC&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Sofia&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Adelaide&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Baltimore,+MD&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Leuven&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Edinburgh,+UK&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=San+Francisco,+USA&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Sydney,+Australia&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Nancy,+France&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Portland,+OR&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Cambridge,+UK&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Norwich,+UK&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=India&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Munich&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=France&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Amsterdam&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Davis,+CA&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Brussels,+Belgium&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Ann+Arbor,+MI&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Buenos+Aires,+Argentina&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Chapel+Hill,+NC&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Manchester,+UK&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Paderborn,+Germany&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Utrecht,+The+Netherlands&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=UK&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Belgium&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Boston&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=New+York,+NY,+USA&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Glasgow,+Scotland&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Indianapolis,+IN&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Latin+America&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Melbourne&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Amsterdam&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Melbourne,+Australia&key=xxx&gt;\n\n\nℹ &lt;https://maps.googleapis.com/maps/api/geocode/json?address=Hefei,+Anhui,+China&key=xxx&gt;\n\n\nWarning in (function (..., deparse.level = 1) : number of columns of result is\nnot a multiple of vector length (arg 2)\n\n\nWarning in (function (..., deparse.level = 1) : number of columns of result is\nnot a multiple of vector length (arg 1)\n\n\nWarning in (function (..., deparse.level = 1) : number of columns of result is\nnot a multiple of vector length (arg 2)\n\n\nWarning in (function (..., deparse.level = 1) : number of columns of result is\nnot a multiple of vector length (arg 3)\n\n\nWarning in (function (..., deparse.level = 1) : number of columns of result is\nnot a multiple of vector length (arg 2)\n\n\nWarning in (function (..., deparse.level = 1) : number of columns of result is\nnot a multiple of vector length (arg 2)\n\n\nWarning in (function (..., deparse.level = 1) : number of columns of result is\nnot a multiple of vector length (arg 1)\n\n\nWarning in (function (..., deparse.level = 1) : number of columns of result is\nnot a multiple of vector length (arg 2)\n\n\nWarning in (function (..., deparse.level = 1) : number of columns of result is\nnot a multiple of vector length (arg 5)\n\n\nWarning in (function (..., deparse.level = 1) : number of columns of result is\nnot a multiple of vector length (arg 2)\n\nWarning in (function (..., deparse.level = 1) : number of columns of result is\nnot a multiple of vector length (arg 2)\n\nWarning in (function (..., deparse.level = 1) : number of columns of result is\nnot a multiple of vector length (arg 2)\n\n\nWarning in (function (..., deparse.level = 1) : number of columns of result is\nnot a multiple of vector length (arg 1)\n\n\nWarning in (function (..., deparse.level = 1) : number of columns of result is\nnot a multiple of vector length (arg 5)\n\n\nWarning in (function (..., deparse.level = 1) : number of columns of result is\nnot a multiple of vector length (arg 2)\n\n\nWarning in (function (..., deparse.level = 1) : number of columns of result is\nnot a multiple of vector length (arg 2)\n\n\nWarning in (function (..., deparse.level = 1) : number of columns of result is\nnot a multiple of vector length (arg 2)\n\n\nWarning in (function (..., deparse.level = 1) : number of columns of result is\nnot a multiple of vector length (arg 2)\n\n\nWarning in (function (..., deparse.level = 1) : number of columns of result is\nnot a multiple of vector length (arg 2)\n\n\nWarning in (function (..., deparse.level = 1) : number of columns of result is\nnot a multiple of vector length (arg 2)\n\n\nWarning in (function (..., deparse.level = 1) : number of columns of result is\nnot a multiple of vector length (arg 2)\n\n\nWarning in (function (..., deparse.level = 1) : number of columns of result is\nnot a multiple of vector length (arg 2)\n\nWarning in (function (..., deparse.level = 1) : number of columns of result is\nnot a multiple of vector length (arg 2)\n\n\n\nNumber of authors: 263\nNumber of countries: 25"
  },
  {
    "objectID": "index.html#parse-tag-data",
    "href": "index.html#parse-tag-data",
    "title": "Glittr stats",
    "section": "Parse tag data",
    "text": "Parse tag data\n\n\nCode\nparsed &lt;- request(\"https://glittr.org/api/tags\") |&gt;\n  req_perform() |&gt; resp_body_json()\n\ntag_dfs &lt;- list()\nfor(i in seq_along(parsed)) {\n  category &lt;- parsed[[i]]$category\n  name &lt;- sapply(parsed[[i]]$tags, function(x) x$name)\n  repositories &lt;- sapply(parsed[[i]]$tags, function(x) x$repositories)\n  tag_dfs[[category]] &lt;- data.frame(name, category, repositories)\n}\n\ntag_df &lt;- do.call(rbind, tag_dfs) |&gt; arrange(repositories)\n\n\nNumber of tags/topics: 55"
  },
  {
    "objectID": "index.html#categories",
    "href": "index.html#categories",
    "title": "Glittr stats",
    "section": "Categories",
    "text": "Categories\n\n\nCode\ncat_count_plot &lt;- table(category = repo_info$main_category) |&gt;\n  as.data.frame() |&gt;\n  ggplot(aes(x = reorder(category, Freq), y = Freq, fill = category)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_manual(values = glittr_cols) +\n  coord_flip() +\n  theme_classic() +\n  ggtitle(\"Categories\") +\n  theme(legend.position = \"none\",\n        axis.title.y = element_blank()) +\n  ylab(\"Number of repositories\")\n\nprint(cat_count_plot)\n\n\n\n\n\n\n\n\n\n\n\nCode\ncategory_count &lt;- table(category = repo_info$main_category) |&gt; as.data.frame()\nknitr::kable(category_count)\n\n\n\n\n\ncategory\nFreq\n\n\n\n\nScripting and languages\n314\n\n\nComputational methods and pipelines\n54\n\n\nOmics analysis\n84\n\n\nReproducibility and data management\n51\n\n\nStatistics and machine learning\n40\n\n\nOthers\n23"
  },
  {
    "objectID": "index.html#licensing",
    "href": "index.html#licensing",
    "title": "Glittr stats",
    "section": "Licensing",
    "text": "Licensing\n\n\nCode\nlic_freq_data &lt;- table(license = repo_info$license,\n                       main_category = repo_info$main_category) |&gt;\n  as.data.frame()\n\nlic_freq_data$main_category &lt;- factor(lic_freq_data$main_category,\n                                     levels = names(cat_table))\n\nlic_freq_plot &lt;- lic_freq_data |&gt;\n  ggplot(aes(x = reorder(license, Freq), y = Freq, fill = main_category)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() +\n  scale_fill_manual(values = glittr_cols) +\n  theme_classic() +\n  ggtitle(\"License type\") +\n  ylab(\"Number of repositories\") +\n  theme(legend.position = \"none\",\n        axis.title.y = element_blank())\n\nprint(lic_freq_plot)\n\n\n\n\n\n\n\n\n\n\n\nCode\nrepo_info$license |&gt;\n  table() |&gt;\n  as.data.frame() |&gt;\n  mutate(perc = round(Freq/nrow(repo_info)*100, 1)) |&gt;\n  arrange(desc(Freq)) |&gt;\n  knitr::kable()\n\n\n\n\n\nVar1\nFreq\nperc\n\n\n\n\nother\n211\n37.3\n\n\nnone\n172\n30.4\n\n\nmit\n59\n10.4\n\n\ncc-by-sa-4.0\n30\n5.3\n\n\ngpl-3.0\n26\n4.6\n\n\ncc-by-4.0\n23\n4.1\n\n\ncc0-1.0\n22\n3.9\n\n\napache-2.0\n10\n1.8\n\n\nbsd-3-clause\n7\n1.2\n\n\nagpl-3.0\n2\n0.4\n\n\nartistic-2.0\n2\n0.4\n\n\nunlicense\n1\n0.2\n\n\nwtfpl\n1\n0.2"
  },
  {
    "objectID": "index.html#authors",
    "href": "index.html#authors",
    "title": "Glittr stats",
    "section": "Authors",
    "text": "Authors\n\n\nCode\nauthor_freq &lt;- table(author_name = repo_info$author_name, \n                     main_category = repo_info$main_category) |&gt;\n  as.data.frame()\n\nauthor_freq$main_category &lt;- factor(author_freq$main_category,\n                                     levels = names(cat_table))\n\nrepos_per_author &lt;- table(repo_info$author_name)\n\nlf_authors &lt;- names(repos_per_author)[repos_per_author &lt; 5]\n\nauthor_freq_plot &lt;- author_freq |&gt;\n  filter(!author_name %in% lf_authors) |&gt;\n  arrange(Freq) |&gt;\n  ggplot(aes(x = reorder(author_name, Freq), y = Freq, fill = main_category)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() +\n  ggtitle(\"Author or organization\") +\n  ylab(\"Number of repositories\") +\n  scale_fill_manual(values = glittr_cols) +\n  annotate(geom = \"text\", x = 2, y = 30,\n           label = paste(\"Authors with &lt; 5 repos: \",\n                         length(lf_authors)),\n           color=\"black\") +\n  theme_classic() +\n  theme(legend.position = \"none\",\n        axis.title.y = element_blank())\n\nprint(author_freq_plot)"
  },
  {
    "objectID": "index.html#tags",
    "href": "index.html#tags",
    "title": "Glittr stats",
    "section": "Tags",
    "text": "Tags\n\n\nCode\ntag_freq_plot &lt;- tag_df |&gt;\n  filter(repositories &gt; 10) |&gt;\n  ggplot(aes(x = reorder(name, repositories),\n             y = repositories, fill = category)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() +\n  scale_fill_manual(values = glittr_cols) +\n  ggtitle(\"Tags with &gt; 10 repositories\") +\n  ylab(\"Number of repositories\") +\n  annotate(geom = \"text\", x = 2, y = 150,\n           label = paste(\"Total number of tags: \",\n                         nrow(tag_df)),\n           color=\"black\") +\n  theme_classic() +\n  theme(legend.position = \"none\",\n        axis.title.y = element_blank())\n\nprint(tag_freq_plot)\n\n\n\n\n\n\n\n\n\n\n\nCode\ntag_df |&gt;\n  filter(repositories &gt; 10) |&gt;\n  arrange(desc(repositories)) |&gt;\n  knitr::kable(row.names = FALSE)\n\n\n\n\n\n\n\n\n\n\nname\ncategory\nrepositories\n\n\n\n\nR\nScripting and languages\n230\n\n\nPython\nScripting and languages\n81\n\n\nTranscriptomics\nOmics analysis\n74\n\n\nRNA-seq\nOmics analysis\n65\n\n\nStatistics\nStatistics and machine learning\n54\n\n\nNext generation sequencing\nOmics analysis\n48\n\n\nData science\nStatistics and machine learning\n45\n\n\nMachine learning\nStatistics and machine learning\n41\n\n\nGenomics\nOmics analysis\n37\n\n\nUnix/Linux\nScripting and languages\n34\n\n\nSingle-cell sequencing\nOmics analysis\n34\n\n\nData management\nReproducibility and data management\n34\n\n\nReproducibility\nReproducibility and data management\n29\n\n\nFAIR data\nReproducibility and data management\n28\n\n\nGeneral\nOthers\n28\n\n\nData visualization\nScripting and languages\n27\n\n\nVariant analysis\nOmics analysis\n23\n\n\nVersion control\nScripting and languages\n21\n\n\nContainerization\nComputational methods and pipelines\n18\n\n\nWorkflows\nComputational methods and pipelines\n17\n\n\nShiny\nScripting and languages\n15\n\n\nMetagenomics\nOmics analysis\n15\n\n\nDocker\nComputational methods and pipelines\n13\n\n\nJulia\nScripting and languages\n12\n\n\nNextflow\nComputational methods and pipelines\n12\n\n\nChIP-seq\nOmics analysis\n11"
  },
  {
    "objectID": "index.html#contributors-boxplot",
    "href": "index.html#contributors-boxplot",
    "title": "Glittr stats",
    "section": "Contributors boxplot",
    "text": "Contributors boxplot\n\n\nCode\nrepo_info_gh$main_category &lt;- factor(repo_info_gh$main_category,\n                                     levels = names(cat_table))\n\ncontributors_plot &lt;- repo_info_gh |&gt;\n  ggplot(aes(x = main_category, y = contributors, fill = main_category)) +\n  geom_violin(scale = \"width\") +\n  geom_boxplot(width = 0.1, col = \"darkgrey\") +\n  coord_flip() +\n  ggtitle(\"Contributors\") +\n  ylab(\"Number of contributors\") +\n  scale_y_sqrt() +\n  scale_fill_manual(values = glittr_cols) +\n  theme_bw() +\n  theme(legend.position = \"none\",\n        axis.title.y = element_blank(),\n        plot.margin = margin(t = 5, r = 10, b = 5, l = 10))\n\nprint(contributors_plot)\n\n\n\n\n\n\n\n\n\n\n\nCode\nnna_contr &lt;- repo_info_gh$contributors\nparam1 &lt;- sum(nna_contr &gt; 10)/length(nna_contr)\n# 27.3% have more than 10 contributors\nparam2 &lt;- sum(nna_contr &gt; 1)/length(nna_contr)\n# 78.6% have more than one contributor\n# 115 repos with only one contributor\nparam3 &lt;- sum(nna_contr &lt;= 5)/length(nna_contr)\n\n\n\nMore than 10 contributors: 25.6%\nMore than 1 contributor: 78.8%\nBetween 1 and 5 contributors: 59.9%"
  },
  {
    "objectID": "index.html#countries",
    "href": "index.html#countries",
    "title": "Glittr stats",
    "section": "Countries",
    "text": "Countries\n\n\nCode\ncountry_freq &lt;- table(country = repo_info$country, \n                      main_category = repo_info$main_category) |&gt;\n  as.data.frame()\n\ncountry_freq$main_category &lt;- factor(country_freq$main_category,\n                                     levels = names(cat_table))\n\ncountry_freq_plot &lt;- country_freq |&gt;\n  filter(country != \"undefined\") |&gt;\n  ggplot(aes(x = reorder(country, Freq), y = Freq, fill = main_category)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() +\n  ggtitle(\"Country\") +\n  ylab(\"Number of repositories\") +\n  scale_fill_manual(values = glittr_cols) +\n  annotate(geom = \"text\", x = 2, y = 70,\n           label = paste(\"Repos with undefined country: \",\n                         sum(repo_info$country == \"undefined\")),\n           color=\"black\") +\n  theme_classic() +\n  theme(legend.position = \"none\",\n        axis.title.y = element_blank())\n\nprint(country_freq_plot)\n\n\n\n\n\n\n\n\n\n\n\nCode\nrepo_info$country |&gt; table() |&gt; as.data.frame() |&gt; arrange(desc(Freq)) |&gt; knitr::kable()\n\n\n\n\n\nVar1\nFreq\n\n\n\n\nundefined\n244\n\n\nUnited States\n132\n\n\nSwitzerland\n27\n\n\nCanada\n26\n\n\nSweden\n21\n\n\nUnited Kingdom\n19\n\n\nAustralia\n15\n\n\nGermany\n12\n\n\nFrance\n11\n\n\nNetherlands\n11\n\n\nPortugal\n11\n\n\nBelgium\n10\n\n\nSpain\n8\n\n\nDenmark\n4\n\n\nItaly\n3\n\n\nBulgaria\n2\n\n\nIreland\n2\n\n\nArgentina\n1\n\n\nChina\n1\n\n\nFinland\n1\n\n\nIndia\n1\n\n\nLuxembourg\n1\n\n\nNorway\n1\n\n\nPoland\n1\n\n\nUkraine\n1"
  },
  {
    "objectID": "index.html#summary-plot",
    "href": "index.html#summary-plot",
    "title": "Glittr stats",
    "section": "Summary plot",
    "text": "Summary plot\n\n\nCode\npdf(\"grid_plot_fig1.pdf\", width = 10, height = 10)\nplot_grid(cat_count_plot, contributors_plot, \n          tag_freq_plot, author_freq_plot,  \n          lic_freq_plot, country_freq_plot,\n          ncol = 2, labels = LETTERS[1:6],\n          rel_heights = c(2,3,3))\ndev.off()\n\n\npng \n  2"
  }
]